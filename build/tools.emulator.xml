<?xml version="1.0" encoding="UTF-8"?>
<project name="tools.emulator" >
    
    <property name="project.name" value="tools.emulator" />
    
    <import file="build.properties.xml" />
    <import file="${build.dir}/ant-tasks.xml" />
    <import file="${build.dir}/tools.xml" />
    
    <fail unless="sdk.dir" message="SDK dir is not set." />
    
    <property name="sdk.tools.dir" location="${sdk.dir}/tools" />
    <property name="sdk.platform.tools.dir" location="${sdk.dir}/platform-tools" />
    <property name="sdk.android" location="${sdk.tools.dir}/android" />
    <property name="sdk.emulator" location="${sdk.tools.dir}/emulator" />
    <property name="sdk.adb" location="${sdk.platform.tools.dir}/adb" />
    <property name="sdk.aapt" location="${sdk.platform.tools.dir}/aapt" />
    <property name="exec.timeout" value="600000" />
    
    <macrodef name="show-tmp-size" >
        <sequential>
            <echo>Stats on /tmp</echo>
            <shellscript shell="bash" >
                 df -h /tmp
            </shellscript>
        </sequential>
    </macrodef>
    
    <macrodef name="kill-emulators" >
        <sequential>
            <run-python name="kill-emulators" />
        </sequential>
    </macrodef>
    
    <macrodef name="create-emulator">
        <attribute name="target" />
        <sequential>
            <run-python name="create-emulator" >
                <args>
                    <arg value="@{target}" />
                </args>
            </run-python>
        </sequential>
    </macrodef>
    
    <macrodef name="delete-emulator">
        <attribute name="target" />
        <sequential>
            <run-python name="delete-emulator" >
                <args>
                    <arg value="@{target}" />
                </args>
            </run-python>
        </sequential>
    </macrodef>
    
    <macrodef name="check-emulator" >
        <attribute name="avd" />
        <sequential>
            
            <local name="avd.list" />
            <exec executable="${sdk.android}" outputproperty="avd.list">
                <arg value="list" />
            </exec>

            <if>
                <condition>
                    <matches pattern="^\s*Name:[\s]*@{avd}\s*$" multiline="true" string="${avd.list}" />
                </condition>
               <then>
                   <echo message="Emulator '@{avd}' exists!" /> 
               </then>
               <else>
                   <fail message="Emulator '@{avd}` is not found!" />
               </else>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="start-emulator" >
        <attribute name="avd" />
        <attribute name="wipe" default="true" />
        <attribute name="killemulators" default="true" />
        <sequential>
            <echo>About to start '@{avd}' emulator </echo>
            <check-emulator avd="@{avd}" />
            
            <if condition="@{killemulators}" >
                <then>  
                  <kill-emulators />
              </then>
            </if>
            
            <var name="wipe-arg" value="" />
            <if condition="@{wipe}" >
                <then>
                <var name="wipe-arg" value="-wipe-data" />
              </then>
            </if>
            
            <exec executable="${sdk.emulator}" spawn="true">
                <arg value="-avd" />
                <arg value="@{avd}" />
                <arg value="${wipe-arg}" />
            </exec>
        </sequential>
    </macrodef>
    
    <macrodef name="wait-emulator" >
        <sequential>
            <echo>Waiting for emulator...</echo>
            <exec executable="${sdk.adb}" failonerror="true" timeout="${exec.timeout}">
                <arg value="-e" />
                <arg value="devices" />
            </exec>
            <exec executable="${sdk.adb}" failonerror="true" timeout="${exec.timeout}">
                <arg value="-e" />
                <arg value="wait-for-device" />
            </exec>
            <echo>Emulator is up. Waiting for it to become online...</echo>
            <run-python name="emulator-wait-and-unlock" timeout="${exec.timeout}" />
            <echo>Emulator is connected.</echo>
      </sequential>
    </macrodef>
    
    <macrodef name="check-code-coverage">
        <attribute name="blocks-threshold" default="90" />
        <attribute name="lines-threshold" default="90" />
        <attribute name="coverage-txt" />
        <sequential>
            <run-python name="check-coverage" failonerror="true" timeout="${exec.timeout}" >
                <args>
                    <arg value="@{coverage-txt}" />
                    <arg value="@{blocks-threshold}" />
                    <arg value="@{lines-threshold}" />
                </args>
            </run-python>
        </sequential>
    </macrodef>
    
    <target name="show-tmp-size">
          <show-tmp-size />
    </target>
    
    <target name="restart-adb">
        <restart-adb />
    </target>
        
    <target name="kill-emulators">
        <kill-emulators />
    </target>
    
    <target name="create-emulator">
          <fail unless="create.target" message="Please specify -Dcreate.target=... to create the emulator" />
          <create-emulator target="${create.target}" />
    </target>
    
    <target name="delete-emulator">
      <fail unless="delete.target" message="Please specify -Ddelete.target=... to delete the emulator" />
      <delete-emulator target="${delete.target}" />
    </target>
    
    <target name="start-emulator">
        <fail unless="avd" message="Please specify -Davd=... to start the emulator" />
        <start-emulator avd="${avd}" />
    </target>
            
    <target name="wait-emulator">
        <wait-emulator />
    </target>
    
    <target name="check-code-coverage">
    <fail unless="coverage.txt" message="Please specify coverage.txt to point to coverage report." />
        <property name="blocks.threshold" value="90" />
        <property name="lines.threshold"  value="90" />
        <check-code-coverage coverage-txt="${coverage.txt}" 
                           blocks-threshold="${blocks.threshold}" 
                             lines-threshold="${lines.threshold}" />
  </target>    
</project>